var_for_docker_image: &docker_image circleci/python:2.7.14-jessie-browsers

anchor_for_job_defaults: &job_defaults
  working_directory: /home/circleci/oppia
  # machine:
  #   image: ubuntu-1604:201903-01
  # Its okay to hardcode the CC_TEST_REPORTER_ID as the only risk in doing so is
  # when someone uses this test coverage ID to post incorrect coverage data.
  # This generally does not occur and if it happens, it would be replaced with
  # data from subsequent coverage payloads. See this comment for more
  # information: https://github.com/oppia/oppia/pull/7067#issuecomment-508822501
  environment:
    CC_TEST_REPORTER_ID: 561968e2f03d3bb4f1aed69dc94174c2e3b9dc82cf1f8ad31fc799f8c67afc6e
  docker:
    - image: *docker_image

anchor_for_installing_dependencies: &install_dependencies
  name: Install dependencies
  command: |
    source scripts/setup.sh || exit 1
    source scripts/setup_gae.sh || exit 1

anchor_for_installing_cc_test_reporter: &install_cc
  name: Install codeclimate test reporter
  command: |
    curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    chmod +x ./cc-test-reporter
    ./cc-test-reporter before-build

anchor_for_restoring_cache: &restore_cache
  keys:
    - setup-files-cache-{{ checksum "date" }}
    - third-party-cache-{{ checksum "date" }}

anchor_for_installing_chrome: &install_chrome
  name: Install Chrome
  command: |
    sudo apt-get install lsb-release libappindicator3-1
    curl -L -o google-chrome.deb https://github.com/webnicer/chrome-downloads/raw/master/x64.deb/google-chrome-stable_67.0.3396.99-1_amd64.deb
    sudo dpkg -i google-chrome.deb
    sudo sed -i 's|HERE/chrome"|HERE/chrome" --disable-setuid-sandbox|g' /opt/google/chrome/google-chrome
    rm google-chrome.deb

version: 2
jobs:
  setup:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_dependencies
    #   - save_cache:
    #       key: setup-files-cache-{{ checksum "date" }}
    #       paths:
    #         - node_modules/
    #         - ../oppia_tools/

  lint_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run:
          <<: *install_dependencies
      - run: sudo pip install pyyaml
      - run:
          name: Run lint tests
          command: |
            bash scripts/install_third_party.sh
            python scripts/third_party_size_check.py
            python scripts/pre_commit_linter.py --path=. --verbose

  frontend_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          name: Run frontend tests
          command: |
            bash -x scripts/run_frontend_tests.sh --run-minified-tests=true
      - run:
          name: Generate frontend coverage report
          command: |
            sudo pip install codecov
            codecov --file ../karma_coverage_reports/lcov.info -F frontend
          when: on_success

  backend_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          name: Run backend tests
          command: |
            bash scripts/run_backend_tests.sh --generate_coverage_report --exclude_load_tests
      - run:
          <<: *install_cc
      - run:
          name: Generate backend coverage report
          command: |
            sudo pip install codecov
            codecov -F backend
            ./cc-test-reporter format-coverage -t coverage.py coverage.xml
            ./cc-test-reporter sum-coverage coverage/codeclimate.json
            ./cc-test-reporter upload-coverage
          when: on_success

  accessibility_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run accessibility e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="accessibility" --prod_env --sharding=false

  additionalEditorAndPlayerFeatures_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run additionalEditorAndPlayerFeatures e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="additionalEditorAndPlayerFeatures" --prod_env --sharding=false

  collections_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run collections e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="collections" --prod_env --sharding=false

  coreEditorAndPlayerFeatures_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run coreEditorAndPlayerFeatures e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="coreEditorAndPlayerFeatures" --prod_env --sharding=false

  embedding_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run embedding e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="embedding" --prod_env --sharding=false

  explorationFeedbackTab_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run explorationFeedbackTab e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="explorationFeedbackTab" --prod_env --sharding=false

  explorationHistoryTab_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run explorationHistoryTab e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="explorationHistoryTab" --prod_env --sharding=false

  explorationStatisticsTab_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run explorationStatisticsTab e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="explorationStatisticsTab" --prod_env --sharding=false

  explorationTranslationTab_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run explorationTranslationTab e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="explorationTranslationTab" --prod_env --sharding=false

  extensions_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run extensions e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="extensions" --prod_env --sharding=false

  learnerDashboard_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run learnerDashboard e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="learnerDashboard" --prod_env --sharding=false

  learner_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run learner e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="learner" --prod_env --sharding=false

  library_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run library e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="library" --prod_env --sharding=false

  navigation_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run navigation e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="navigation" --prod_env --sharding=false

  preferences_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run preferences e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="preferences" --prod_env --sharding=false

  profileMenu_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run profileMenu e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="profileMenu" --prod_env --sharding=false

  publication_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run publication e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="publication" --prod_env --sharding=false

  skillEditorPage_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run skillEditor e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="skillEditor" --prod_env --sharding=false

  subscriptions_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run subscriptions e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="subscriptions" --prod_env --sharding=false

  topicsAndSkillsDashboard_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run topicsAndSkillsDashboard e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="topicsAndSkillsDashboard" --prod_env --sharding=false

  topicAndStoryEditor_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run topicAndStoryEditor e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="topicAndStoryEditor" --prod_env --sharding=false

  users_e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run: date +%F > date
    #   - restore_cache:
    #       <<: *restore_cache
      - run:
          <<: *install_chrome
      - run:
          name: Run users e2e Tests
          command: |
            bash scripts/run_e2e_tests.sh --suite="users" --prod_env --sharding=false

workflows:
  version: 2
  circleci_tests:
    jobs:
      - setup
      - lint_tests:
          requires:
            - setup
      - frontend_tests:
         requires:
           - setup
      - backend_tests:
         requires:
           - setup
      - accessibility_e2e_tests:
          requires:
            - setup
      - additionalEditorAndPlayerFeatures_e2e_tests:
          requires:
            - setup
      - collections_e2e_tests:
          requires:
            - setup
      - coreEditorAndPlayerFeatures_e2e_tests:
          requires:
            - setup
      - embedding_e2e_tests:
          requires:
            - setup
      - explorationFeedbackTab_e2e_tests:
          requires:
            - setup
      - explorationHistoryTab_e2e_tests:
          requires:
            - setup
      - explorationStatisticsTab_e2e_tests:
          requires:
            - setup
      - explorationTranslationTab_e2e_tests:
          requires:
            - setup
      - extensions_e2e_tests:
          requires:
            - setup
      - learnerDashboard_e2e_tests:
          requires:
            - setup
      - learner_e2e_tests:
          requires:
            - setup
      - library_e2e_tests:
          requires:
            - setup
      - navigation_e2e_tests:
          requires:
            - setup
      - profileMenu_e2e_tests:
          requires:
            - setup
      - publication_e2e_tests:
          requires:
            - setup
      - skillEditorPage_e2e_tests:
          requires:
            - setup
      - subscriptions_e2e_tests:
          requires:
            - setup
      - topicsAndSkillsDashboard_e2e_tests:
          requires:
            - setup
      - topicAndStoryEditor_e2e_tests:
          requires:
            - setup
      - users_e2e_tests:
          requires:
            - setup

notify:
  webhooks:
    # A list of hook hashes, containing the url field
    # gitter hook
    - url: https://webhooks.gitter.im/e/71ac71505d1d45161035
