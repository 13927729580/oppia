author_notes: ''
blurb: ''
default_skin: snapshots_v1
init_state_name: First State
language_code: en
objective: Explore Turtle Geometry
param_changes:
- customization_args:
    parse_with_jinja: true
    value: ''
  generator_id: Copier
  name: PencilCode0initialCode
param_specs:
  PencilCode0initialCode:
    obj_type: UnicodeString
schema_version: 5
skin_customizations:
  panels_contents:
    main:
    - customization_args: {}
      gadget_id: PencilCode
      visible_in_states:
      - First State
      - Building the Turtle a Home
      - Reducing Code through Loops
      - Decomposition of Drawing a Square
      - Using Patterns to Draw a Pentagon
      - Algorithm Question
      - Designing a General Algorithm
      - Conclusion
states:
  Algorithm Question:
    content:
    - type: text
      value: '<p>Look at the instructions you developed for the pentagon and compare
        it to the instructions for the square. What patterns do you notice?</p><p><br></p><p>What
        relationship do you notice between the number of instructions you wrote and
        the sides of the polygon?

        <br></p>'
    interaction:
      customization_args:
        choices:
          value:
          - <p><b>Equal</b> - The number lines of code is approximately&nbsp;equal
            to the number of sides for the polygon (4 lines of code for a square,
            5 lines of code for a pentagon).</p>
          - <p><b>2x</b> - The number&nbsp;lines of code is approximately twice as
            much as the number of sides of the polygon (8 lines of code for a square,
            10 lines of code for a pentagon).</p>
          - <p><b>3x</b> - The number of lines of code is approximately three times
            as much as the number of sides of the polygon (12 lines of code for a
            square, 15 lines of code for a pentagon).</p>
      handlers:
      - name: submit
        rule_specs:
        - definition:
            inputs:
              x: 1
            name: Equals
            rule_type: atomic
            subject: answer
          dest: Designing a General Algorithm
          feedback:
          - "<p>Yes that's right.\_<b>Recognizing patterns</b> within data is another\
            \ crucial step in computational thinking because it provides us with the\
            \ key pieces of information we need to determine if and what the underlying\
            \ principle might be.\n</p><p></p>"
          param_changes: []
        - definition:
            rule_type: default
          dest: Algorithm Question Feedback
          feedback:
          - <p>Look again at the instructions you wrote for a square</p><table><tbody><tr><td><p><span>instructions</span></p></td><td><p><span>code
            for your turtle</span></p></td></tr><tr><td><ol><li><p><span>Move forward
            100 steps</span></p></li><li><p><span>Turn right 90 degrees</span></p></li><li><p><span>Move
            forward 100 steps</span></p></li><li><p><span>Turn right 90 degrees</span></p></li><li><p><span>Move
            forward 100 steps</span></p></li><li><p><span>Turn right 90 degrees</span></p></li><li><p><span>Move
            forward 100 steps</span></p></li><li><p><span>Turn right 90 degrees</span></p></li></ol></td><td><ol><li><p><span>fd
            100</span></p></li><li><p><span>rt 90</span></p></li><li><p><span>fd 100</span></p></li><li><p><span>rt
            90</span></p></li><li><p><span>fd 100</span></p></li><li><p><span>rt 90</span></p></li><li><p><span>fd
            100</span></p></li><li><p><span>rt 90</span></p></li></ol></td></tr></tbody></table><br><p>For
            a 4 sided polygon you wrote 8 instructions. How many instructions do you
            think you will need for your pentagon (5-sided polygon)?</p>
          param_changes: []
      id: MultipleChoiceInput
      triggers: []
    param_changes: []
  Algorithm Question Feedback:
    content:
    - type: text
      value: <p>Here is one example of instructions for a pentagon.</p><p><br></p><table><tbody><tr><td><p><span>instructions</span></p></td><td><p><span>code
        for your turtle</span></p></td></tr><tr><td><ol><li><p><span>Move forward
        100 steps</span></p></li><li><p><span>Turn right 72 degrees</span></p></li><li><p><span>Move
        forward 100 steps</span></p></li><li><p><span>Turn right 72 degrees</span></p></li><li><p><span>Move
        forward 100 steps</span></p></li><li><p><span>Turn right 72 degrees</span></p></li><li><p><span>Move
        forward 100 steps</span></p></li><li><p><span>Turn right 72 degrees</span></p></li><li><p>Move
        forward 100 steps</p></li><li><p>Turn right 72 degrees</p></li></ol></td><td><ol><li><p><span>fd
        100</span></p></li><li><p><span>rt 72</span></p></li><li><p><span>fd 100</span></p></li><li><p><span>rt
        72</span></p></li><li><p><span>fd 100</span></p></li><li><p><span>rt 72</span></p></li><li><p><span>fd
        100</span></p></li><li><p><span>rt 72</span></p></li><li><p><span>fd 100</span></p></li><li><p><span>rt
        72</span></p></li></ol></td></tr></tbody></table><br><p>For a 5 sided polygon,
        10 lines of code are needed. Let's go back and see if we can find the general
        relationship between sides and lines of code. Click <b>Next</b>.</p>
    interaction:
      customization_args:
        buttonText:
          value: Next
      handlers:
      - name: submit
        rule_specs:
        - definition:
            rule_type: default
          dest: Algorithm Question
          feedback: []
          param_changes: []
      id: Continue
      triggers: []
    param_changes: []
  Building the Turtle a Home:
    content:
    - type: text
      value: <p>Why not give the turtle a home to sleep? Continuing adding commands
        to see if you can draw a house like this. It's ok if you don't get it the
        first time, keep trying!</p><p><br></p><p><oppia-noninteractive-image filepath-with-value="&amp;quot;turtle_house.png&amp;quot;"></oppia-noninteractive-image><br></p><p><br></p><p>When
        your turtle has a house, click <b>Next</b>.</p><div><b></b></div><p></p>
    interaction:
      customization_args:
        buttonText:
          value: Next
      handlers:
      - name: submit
        rule_specs:
        - definition:
            rule_type: default
          dest: Reducing Code through Loops
          feedback: []
          param_changes: []
      id: Continue
      triggers: []
    param_changes:
    - customization_args:
        parse_with_jinja: true
        value: 'pen purple

          rt 90

          fd 100

          rt 90

          fd 100

          rt 90

          fd 100

          rt 90

          fd 100'
      generator_id: Copier
      name: PencilCode0initialCode
  Conclusion:
    content:
    - type: text
      value: "<p>Turtle drawing continues to be very popular with both children and\
        \ educators is the freedom a learner has to explore, try things out, make\
        \ mistakes, and learn by doing. Activities like this enable students to discover\
        \ for themselves characteristics of polygons like the measure of interior\
        \ angles. This helps student understand the concept more deeply than if they\
        \ had only heard and calculated it. Additionally with computational thinking,\
        \ students are equipped with a way of figuring it out again if they do forget\
        \ it. The conversation between you and your students can go even further as\
        \ students could develop their own hypothesis for the number of sides in a\
        \ circle or how they would calculate the perimeter of a country. Imagine discussing\
        \ a Calculus concept like Integration with 10 year olds through Computational\
        \ Thinking!</p><p><br></p><p>Turtles drawing shapes through commands has a\
        \ long tradition of showing people how to develop algorithms in order to create\
        \ their own masterpieces. In fact almost any programming language you use\
        \ has its own implementation of turtle (sometimes referred to as Logo), you\
        \ could also continue to explore the possibilities using<span>\_</span><oppia-noninteractive-link\
        \ open_link_in_same_window-with-value=\"false\" text-with-value=\"&amp;quot;Pencil\
        \ Code&amp;quot;\" url-with-value=\"&amp;quot;https://gym.pencilcode.net/draw/#/draw/first.html&amp;quot;\"\
        ></oppia-noninteractive-link>\_as well as\_<oppia-noninteractive-link open_link_in_same_window-with-value=\"\
        false\" text-with-value=\"&amp;quot;Blockly Games&amp;quot;\" url-with-value=\"\
        &amp;quot;https://blockly-games.appspot.com/&amp;quot;\"></oppia-noninteractive-link>\_\
        as determined by your preference or needs.<oppia-noninteractive-link open_link_in_same_window-with-value=\"\
        false\" text-with-value=\"&amp;quot;CS Unplugged&amp;quot;\" url-with-value=\"\
        &amp;quot;http://csunplugged.com/line-drawing/&amp;quot;\"></oppia-noninteractive-link>\_\
        has a line drawing activity for your students to continue exploring this topic.\
        \ For more\_math problems that can be best solved algorithmically look at\
        \ the<span>\_</span><oppia-noninteractive-link open_link_in_same_window-with-value=\"\
        false\" text-with-value=\"&amp;quot;Project Euler&amp;quot;\" url-with-value=\"\
        &amp;quot;https://projecteuler.net/&amp;quot;\"></oppia-noninteractive-link><span>\_\
        </span>problems.</p><p><span><br></span></p><p><span>If you would like to\
        \ see how Computational Thinking is applied in computer science, the humanities,\
        \ or sciences feel free to click to those explorations as well before moving\
        \ on to the next section.<span>\_</span><b><span>TODO</span></b></span></p>"
    interaction:
      customization_args:
        buttonText:
          value: End
      handlers:
      - name: submit
        rule_specs:
        - definition:
            rule_type: default
          dest: END
          feedback: []
          param_changes: []
      id: Continue
      triggers: []
    param_changes: []
  Decomposition of Drawing a Square:
    content:
    - type: text
      value: "<p>Let's apply Computational Thinking so your turtle can draw a regular\
        \ (equal sided) polygon with any number of sides (e.g. pentagon, decagon).\
        \ To make this challenge more manageable, we can break this problem into smaller\
        \ problems that might be easier to solve. Breaking a problem down into smaller\
        \ ones is referred to as <b>decomposition</b>.<br></p><p><br></p><p>You have\
        \ already written instructions in code for your turtle to draw a 4-sided (square).\
        \ Write out the steps for what the turtle needs to do in order to draw a square.</p><p><b><br></b></p><div><table><tbody><tr><td><p><span></span></p></td></tr></tbody></table></div><table><tbody><tr><td><p><span>instructions</span></p></td><td><p><span>code\
        \ for your turtle</span></p></td></tr><tr><td><ol><li><p>\_Move forward 100</p></li><li><p>Turn\
        \ right 90</p></li><li><p><br></p></li><li><p><br></p></li><li><p><br></p></li><li><p><br></p></li><li><p><br></p></li><li><p>\_\
        \ \_ \_ \_ \_ \_ \_ \_ \_ \_ \_ \_ \_ \_ \_ \_ \_ \_ \_ \_\_</p></li></ol></td><td><ol><li><p><span>fd\
        \ 100</span></p></li><li><p><span>rt 90</span></p></li><li><p><span>fd 100</span></p></li><li><p><span>rt\
        \ 90</span></p></li><li><p><span>fd 100</span></p></li><li><p><span>rt 90</span></p></li><li><p><span>fd\
        \ 100</span></p></li><li><p><span>rt 90</span></p></li></ol></td></tr></tbody></table><br><p></p><p>When\
        \ you think you have your instructions and code, click <b>Next</b>.</p>"
    interaction:
      customization_args:
        buttonText:
          value: Next
      handlers:
      - name: submit
        rule_specs:
        - definition:
            rule_type: default
          dest: Using Patterns to Draw a Pentagon
          feedback: []
          param_changes: []
      id: Continue
      triggers: []
    param_changes:
    - customization_args:
        parse_with_jinja: true
        value: 'pen purple

          fd 100

          rt 90

          fd 100

          rt 90

          fd 100

          rt 90

          fd 100

          rt 90'
      generator_id: Copier
      name: PencilCode0initialCode
  Designing a General Algorithm:
    content:
    - type: text
      value: "<p><b></b></p><p>Now that we know there is a correlation between number\
        \ of instructions and the angle we can take that <b>generalization</b> and\
        \ build an <b>algorithm</b> which is a set of instructions that applies to\
        \ similar problems.</p><p><br></p><p>We can reuse some of the code with which\
        \ you built your turtle's house. This code will repeat the two instructions\
        \ (because they are indented) 4 times. We need to make two modifications to\
        \ this algorithm in order to generalize it for all polygons. You can press\
        \ play in Pencil Code and run the code to test this.</p><p><br></p><p>Line\
        \ number 1 is the variable <b><span>sides</span></b> which will represent\
        \ the number of sides. Set <b>sides\_= 4</b>.\_Next, change the <b>4</b> in\
        \ the range of the\_<b><span>for</span></b> statement on the next line to\
        \ <b>sides</b> so the algorithm will repeat as many times as we have set n\
        \ to.<br></p><p><br></p><p>We need to calculate the angle based on the number\
        \ of sides.  You may have discovered the pattern that the angle is equal to\
        \ 360 / sides since your turtle is essentially making a round trip back to\
        \ where it started. So on line number 3 change <b><span>rt 90</span></b>\_\
        to <b><span>360/sides</span></b>. So the angle will be calculated based on\
        \ the number of sides. Run the program and try it out with a different number\
        \ of sides. Feel free to modify the algorithm to make smaller or different\
        \ shapes.<br></p><p><br></p><p>When you are finished click <b>Next</b>.</p><p></p><p></p>"
    interaction:
      customization_args:
        buttonText:
          value: Next
      handlers:
      - name: submit
        rule_specs:
        - definition:
            rule_type: default
          dest: Conclusion
          feedback:
          - <p><br></p><p><span></span></p>
          param_changes: []
      id: Continue
      triggers: []
    param_changes:
    - customization_args:
        parse_with_jinja: true
        value: "sides = 0\nfor [1..4]\n  rt 90\n  fd 100"
      generator_id: Copier
      name: PencilCode0initialCode
  First State:
    content:
    - type: text
      value: "<div></div>After weeks of training, you have succeeded in training your\
        \ pet turtle to hold a pen in its mouth and move and turn according to your\
        \ commands. Now let's see if we can teach the turtle to draw some shapes.<div><br></div><div>Try\
        \ giving it a few more commands so it will draw a square. Use fd to move the\
        \ turtle forward by a certain amount and rt to turn it by a certain number\
        \ of degrees for example:\_</div><div><br></div><p><b><span>fd 100</span></b></p><b><span>rt\
        \ 90</span></b><div><br></div><div>will move the turtle forward 100 pixels\
        \ and turn right 90 degrees.</div><p><br></p><p>When you are ready to move\
        \ on click <b>Next</b>.</p>"
    interaction:
      customization_args:
        buttonText:
          value: Next
      handlers:
      - name: submit
        rule_specs:
        - definition:
            rule_type: default
          dest: Building the Turtle a Home
          feedback: []
          param_changes: []
      id: Continue
      triggers: []
    param_changes:
    - customization_args:
        parse_with_jinja: true
        value: 'pen purple

          fd 100

          rt 90

          fd 100'
      generator_id: Copier
      name: PencilCode0initialCode
  Reducing Code through Loops:
    content:
    - type: text
      value: "<p>Your turtle is so well trained it will even repeat some instructions\
        \ as long as you tell it which instructions to repeat and how many times.\
        \ We can rewrite the house instructions using the\_<b><span>for [a..b] </span></b>command\
        \ which tells the turtle what number to start with and what number to end\
        \ with. This cuts the number of commands we told our turtle almost in half!</p><p><br></p><p>We'll\
        \ use this later when we want to develop an algorithm to draw any type of\
        \ regular polygon.</p><p><br></p><p>Click <b>Next</b>.</p>"
    interaction:
      customization_args:
        buttonText:
          value: Next
      handlers:
      - name: submit
        rule_specs:
        - definition:
            rule_type: default
          dest: Decomposition of Drawing a Square
          feedback: []
          param_changes: []
      id: Continue
      triggers: []
    param_changes:
    - customization_args:
        parse_with_jinja: true
        value: "pen purple\nfor [1..4]\n  #Indented commands repeat\n  rt 90\n  fd\
          \ 100\n#These commands are not repeated\nrt 30\nfd 100\nrt 120\nfd 100"
      generator_id: Copier
      name: PencilCode0initialCode
  Using Patterns to Draw a Pentagon:
    content:
    - type: text
      value: <p>Here is one example of how your instructions might look</p><p><b><br></b></p><div><table><tbody><tr><td><p><span>instructions</span></p></td><td><p><span>code
        for your turtle</span></p></td></tr><tr><td><ol><li><p><span>Move forward
        100 steps</span></p></li><li><p><span>Turn right 90 degrees</span></p></li><li><p><span>Move
        forward 100 steps</span></p></li><li><p><span>Turn right 90 degrees</span></p></li><li><p><span>Move
        forward 100 steps</span></p></li><li><p><span>Turn right 90 degrees</span></p></li><li><p><span>Move
        forward 100 steps</span></p></li><li><p><span>Turn right 90 degrees</span></p></li></ol></td><td><ol><li><p><span>fd
        100</span></p></li><li><p><span>rt 90</span></p></li><li><p><span>fd 100</span></p></li><li><p><span>rt
        90</span></p></li><li><p><span>fd 100</span></p></li><li><p><span>rt 90</span></p></li><li><p><span>fd
        100</span></p></li><li><p><span>rt 90</span></p></li></ol></td></tr></tbody></table></div><br><p></p><p><b></b></p><p><b><span></span></b></p>Write
        your own instructions to create a 5 sided polygon. You might find it easier
        to try writing out the instructions before translating them into code or if
        you get stuck, test out your ideas in Pencil Code with the turtle.  Making
        mistakes along the way is a good thing since you can learn from them.<p><oppia-noninteractive-image
        filepath-with-value="&amp;quot;turtle_pentagon.png&amp;quot;"></oppia-noninteractive-image><br></p><p><br>When
        your turtle has drawn a pentagon and you have the instructions written out,
        click <b>Next</b>.</p>
    interaction:
      customization_args:
        buttonText:
          value: Next
      handlers:
      - name: submit
        rule_specs:
        - definition:
            rule_type: default
          dest: Algorithm Question
          feedback: []
          param_changes: []
      id: Continue
      triggers: []
    param_changes:
    - customization_args:
        parse_with_jinja: true
        value: pen purple
      generator_id: Copier
      name: PencilCode0initialCode
tags: []
